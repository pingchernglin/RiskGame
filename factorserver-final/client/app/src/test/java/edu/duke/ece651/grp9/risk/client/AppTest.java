///*
// * This Java source file was generated by the Gradle 'init' task.
// */
//package edu.duke.ece651.grp9.risk.client;
//
//import edu.duke.ece651.grp9.risk.shared.Map;
//import edu.duke.ece651.grp9.risk.shared.MapTextView;
//import edu.duke.ece651.grp9.risk.shared.Player;
//import edu.duke.ece651.grp9.risk.shared.Territory;
//import org.junit.jupiter.api.Test;
//
//import java.io.*;
//import java.net.ServerSocket;
//import java.net.Socket;
//
//import static org.junit.jupiter.api.Assertions.*;
//
//class AppTest {
//    @Test
//    void findPlayer() {
//        BufferedReader inputReader = new BufferedReader(new InputStreamReader(System.in));
//        App app = new App(inputReader);
//        Map m = new Map();
//        Player p = new Player("red");
//        m.addPlayer(p);
//        assertEquals(p, app.findPlayer("red", m));
//        assertEquals(null, app.findPlayer("green", m));
//    }
//
//
//    @Test
//    void selectColor() throws IOException, InterruptedException {
//        StringReader stringReader = new StringReader("black\nred\n\n");
//        ByteArrayOutputStream bytes = new ByteArrayOutputStream();
//        BufferedReader inputReader = new BufferedReader(stringReader);
//        App app = new App(inputReader);
//        Thread th = new Thread() {
//            @Override
//            public void run() {
//                try {
//                    ServerSocket ss = new ServerSocket(6666);
//                    Socket client = ss.accept();
//                    OutputStream outputStream = client.getOutputStream();
//                    ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);
//                    InputStream inputStream = client.getInputStream();
//                    ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
//                    String sever2client = "false";
//                    objectOutputStream.writeObject(sever2client);
//                    outputStream.flush();
//                    sever2client = "false";
//                    objectOutputStream.writeObject(sever2client);
//                    outputStream.flush();
//                    sever2client = "true";
//                    objectOutputStream.writeObject(sever2client);
//                    outputStream.flush();
//                    ss.close();
//                } catch (IOException e) {
//                    e.printStackTrace();
//                }
//            }
//        };
//        th.start();
//        Thread.sleep(100);
//        Socket socket = new Socket("localhost", 6666);
//        OutputStream outputStream = socket.getOutputStream();
//        ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);
//        InputStream inputStream = socket.getInputStream();
//        ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
//        String res = app.selectColor(inputReader, objectInputStream, objectOutputStream);
//        assertEquals("red", res);
//    }
//
//    @Test
//    void selectUnit() throws InterruptedException, IOException {
//        StringReader stringReader = new StringReader("0 0 -1\n10 15 5\n\n");
//        ByteArrayOutputStream bytes = new ByteArrayOutputStream();
//        BufferedReader inputReader = new BufferedReader(stringReader);
//        App app = new App(inputReader);
//        Thread th = new Thread() {
//            @Override
//            public void run() {
//                try {
//                    ServerSocket ss = new ServerSocket(6666);
//                    Socket client = ss.accept();
//                    OutputStream outputStream = client.getOutputStream();
//                    ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);
//                    InputStream inputStream = client.getInputStream();
//                    ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
//                    String sever2client = "false";
//                    objectOutputStream.writeObject(sever2client);
//                    outputStream.flush();
//                    sever2client = "false";
//                    objectOutputStream.writeObject(sever2client);
//                    outputStream.flush();
//                    sever2client = "true";
//                    objectOutputStream.writeObject(sever2client);
//                    outputStream.flush();
//                    ss.close();
//                } catch (IOException e) {
//                    e.printStackTrace();
//                }
//            }
//        };
//        th.start();
//        Thread.sleep(100);
//        Socket socket = new Socket("localhost", 6666);
//        OutputStream outputStream = socket.getOutputStream();
//        ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);
//        InputStream inputStream = socket.getInputStream();
//        ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
//        String res = app.selectUnit(inputReader, objectInputStream, objectOutputStream);
//        assertEquals("10 15 5", res);
//    }
//
//    @Test
//    void getLoseActionString() {
//        BufferedReader inputReader = new BufferedReader(new InputStreamReader(System.in));
//        App app = new App(inputReader);
//        assertEquals(null, app.getLoseActionString("Q"));
//        assertEquals("the input character is invalid, please enter again!", app.getLoseActionString("P"));
//    }
//
//    @Test
//    void getActionString() {
//        BufferedReader inputReader = new BufferedReader(new InputStreamReader(System.in));
//        App app = new App(inputReader);
//        assertEquals(null, app.getActionString("A"));
//        assertEquals("the input character is invalid, please enter again!", app.getLoseActionString("P"));
//    }
//
//    @Test
//    void selectStateAfterLose() throws IOException {
//        // test quit
//        StringReader stringReader = new StringReader("h\nQ\n");
//        BufferedReader inputReader = new BufferedReader(stringReader);
//        App app = new App(inputReader);
//        String color = "blue";
//        String action = app.selectStateAfterLose(inputReader, color);
//        assertEquals("quit", action);
//        // test continue
//        StringReader stringReader2 = new StringReader("h\nc\n");
//        BufferedReader inputReader2 = new BufferedReader(stringReader2);
//        App app2 = new App(inputReader);
//        String action2 = app.selectStateAfterLose(inputReader2, color);
//        assertEquals("continue", action2);
//    }
//
//}
